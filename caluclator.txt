8.	Write an R Program to Make a Simple Calculator
Functions are used to logically break our code into simpler parts which become easy to maintain and understand.
Itâ€™s pretty straightforward to create your own function in R programming.
Syntax for Writing Functions in R
func_name<- function (argument) {
statement
}
Here, we can see that the reserved word function is used to declare a function in R.
The statements within the curly braces form the body of the function. These braces are optional if the body contains only a single expression.
Finally, this function object is given a name by assigning it to a variable, func_name

The switch() function in R tests an expression against elements of a list. If the value evaluated from the expression matches item from the list, the corresponding value is returned.
Syntax of switch() function
switch (expression, list)
Here, the expression is evaluated and based on this value, the corresponding item in the list is returned.
If the value evaluated from the expression matches with more than one item of the list, switch() function returns the first matched item.
PROGRAM:
add<-function(x,y){
return(x+ y)
}
subtract<-function(x,y){
return(x -y)
}
multiply <-function(x,y){
return(x*y)
}
divide<-function(x,y){
return(x/y)
}
# take input from the user
print("Select operation.")  
print("1.Add") 
print("2.Subtract") 
print("3.Multiply") 
print("4.Divide")
choice=as.integer(readline(prompt="Enter choice[1/2/3/4]:")) 
num1=as.integer(readline(prompt="Enter first number:"))
num2= as.integer(readline(prompt="Enter second number:"))
operator<- switch(choice,"+","-","*","/")
result<-switch(choice, add(num1,num2), subtract(num1,num2), multiply(num1,num2),  divide(num1,num2))
Output:
[1]"Select operation."
[1] "1.Add"
[1]"2.Subtract"
[1]"3.Multiply"
[1] "4.Divide"
Enter choice[1/2/3/4]:3
Enter first number: 2
Enter second number: 3
result:6
